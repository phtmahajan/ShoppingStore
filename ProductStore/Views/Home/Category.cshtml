@model ProductStore.Models.ProductCategory

@{
    ViewBag.Title = "ProductCategory";
}
<h2>List Of Categories</h2>
<div class="content">
    <div class="float-left">
        <ul id="update-products" data-bind="foreach: categories">
            <li>
                <div style="visibility:hidden">
                    <div class="item">Category ID</div>
                    <span data-bind="text: $data.Id"></span>
                </div>
                <div>
                    <div class="item">Name</div>
                    <input type="text" data-bind="value: $data.CategoryName" />
                </div>
               
               
                <div>
                    <input type="button" value="Update" data-bind="click: $root.update" />
                    <input type="button" value="Delete Item" data-bind="click: $root.remove" />
                     <input type="button" value="View Items" data-bind="click: $root.ViewProduct" />
                      <input type="button" value="Add Item" data-bind="click: $root.NewProduct" />
                </div>
            </li>
        </ul>
    </div>

    <div class="float-right">
        <h2>Add New Category</h2>
        <form id="product" data-bind="submit: create">
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>Contact</legend>
                @Html.EditorForModel()
                <p>
                    <input type="submit" value="Save" />
                </p>
            </fieldset>
        </form>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-2.1.0.js")"></script>
    <script type="text/javascript">
        function ProductsViewModel() {
            var self = this;
            self.categories = ko.observableArray();

            var baseUri = '@ViewBag.ApiUrl';



            self.create = function (formElement) {
                // If valid, post the serialized form data to the web api
                $(formElement).validate();
                if ($(formElement).valid()) {
                    $.post(baseUri, $(formElement).serialize(), null, "json")
                        .done(function (o) { self.categories.push(o); });
                }
            }

            self.update = function (product) {
                $.ajax({ type: "PUT", url: baseUri + '/' + product.Id, data: product });
            }

            self.remove = function (product) {
                // First remove from the server, then from the UI
                $.ajax({ type: "DELETE", url: baseUri + '/' + product.Id })
                    .done(function () { self.categories.remove(product); });
            }

            self.NewProduct = function (category) {
                window.location = "/Home/Admin?ID=" + category.Id;
                //$.ajax({ type: "GET", url: "/Home/Admin" , data: category });
            }
            self.ViewProduct = function (category) {
                window.location = "/Home/ViewProduct?ID=" + category.Id;
                //$.ajax({ type: "GET", url: "/Home/Admin" , data: category });
            }


            $.getJSON(baseUri, self.categories);
        }

        $(document).ready(function () {
            ko.applyBindings(new ProductsViewModel());
        })
    </script>
}

